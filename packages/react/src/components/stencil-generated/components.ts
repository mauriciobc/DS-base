'use client';

/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 */

/* eslint-disable */

import { DsButton as DsButtonElement, defineCustomElement as defineDsButton } from "@ds-base/core/dist/components/ds-button.js";
import { DsCheckboxGroup as DsCheckboxGroupElement, defineCustomElement as defineDsCheckboxGroup } from "@ds-base/core/dist/components/ds-checkbox-group.js";
import { DsInput as DsInputElement, defineCustomElement as defineDsInput } from "@ds-base/core/dist/components/ds-input.js";
import { DsRadioGroup as DsRadioGroupElement, defineCustomElement as defineDsRadioGroup } from "@ds-base/core/dist/components/ds-radio-group.js";
import { DsSelect as DsSelectElement, defineCustomElement as defineDsSelect } from "@ds-base/core/dist/components/ds-select.js";
import { DsTextarea as DsTextareaElement, defineCustomElement as defineDsTextarea } from "@ds-base/core/dist/components/ds-textarea.js";
import type { EventName, StencilReactComponent } from '@stencil/react-output-target/runtime';
import { createComponent } from '@stencil/react-output-target/runtime';
import React from 'react';

type DsButtonEvents = NonNullable<unknown>;

export const DsButton: StencilReactComponent<DsButtonElement, DsButtonEvents> = /*@__PURE__*/ createComponent<DsButtonElement, DsButtonEvents>({
    tagName: 'ds-button',
    elementClass: DsButtonElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as DsButtonEvents,
    defineCustomElement: defineDsButton
});

type DsCheckboxGroupEvents = { onDsChange: EventName<CustomEvent<string[]>> };

export const DsCheckboxGroup: StencilReactComponent<DsCheckboxGroupElement, DsCheckboxGroupEvents> = /*@__PURE__*/ createComponent<DsCheckboxGroupElement, DsCheckboxGroupEvents>({
    tagName: 'ds-checkbox-group',
    elementClass: DsCheckboxGroupElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onDsChange: 'dsChange' } as DsCheckboxGroupEvents,
    defineCustomElement: defineDsCheckboxGroup
});

type DsInputEvents = {
    onDsInput: EventName<CustomEvent<string>>,
    onDsChange: EventName<CustomEvent<string>>,
    onDsFocus: EventName<CustomEvent<void>>,
    onDsBlur: EventName<CustomEvent<void>>
};

export const DsInput: StencilReactComponent<DsInputElement, DsInputEvents> = /*@__PURE__*/ createComponent<DsInputElement, DsInputEvents>({
    tagName: 'ds-input',
    elementClass: DsInputElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onDsInput: 'dsInput',
        onDsChange: 'dsChange',
        onDsFocus: 'dsFocus',
        onDsBlur: 'dsBlur'
    } as DsInputEvents,
    defineCustomElement: defineDsInput
});

type DsRadioGroupEvents = { onDsChange: EventName<CustomEvent<string>> };

export const DsRadioGroup: StencilReactComponent<DsRadioGroupElement, DsRadioGroupEvents> = /*@__PURE__*/ createComponent<DsRadioGroupElement, DsRadioGroupEvents>({
    tagName: 'ds-radio-group',
    elementClass: DsRadioGroupElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onDsChange: 'dsChange' } as DsRadioGroupEvents,
    defineCustomElement: defineDsRadioGroup
});

type DsSelectEvents = {
    onDsChange: EventName<CustomEvent<string>>,
    onDsFocus: EventName<CustomEvent<void>>,
    onDsBlur: EventName<CustomEvent<void>>
};

export const DsSelect: StencilReactComponent<DsSelectElement, DsSelectEvents> = /*@__PURE__*/ createComponent<DsSelectElement, DsSelectEvents>({
    tagName: 'ds-select',
    elementClass: DsSelectElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onDsChange: 'dsChange',
        onDsFocus: 'dsFocus',
        onDsBlur: 'dsBlur'
    } as DsSelectEvents,
    defineCustomElement: defineDsSelect
});

type DsTextareaEvents = {
    onDsInput: EventName<CustomEvent<string>>,
    onDsChange: EventName<CustomEvent<string>>,
    onDsFocus: EventName<CustomEvent<void>>,
    onDsBlur: EventName<CustomEvent<void>>
};

export const DsTextarea: StencilReactComponent<DsTextareaElement, DsTextareaEvents> = /*@__PURE__*/ createComponent<DsTextareaElement, DsTextareaEvents>({
    tagName: 'ds-textarea',
    elementClass: DsTextareaElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onDsInput: 'dsInput',
        onDsChange: 'dsChange',
        onDsFocus: 'dsFocus',
        onDsBlur: 'dsBlur'
    } as DsTextareaEvents,
    defineCustomElement: defineDsTextarea
});
